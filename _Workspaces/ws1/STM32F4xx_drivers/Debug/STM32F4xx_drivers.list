
STM32F4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000081c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080009e0  080009e8  000109e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080009e0  080009e0  000109e8  2**0
                  CONTENTS
  4 .ARM          00000000  080009e0  080009e0  000109e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080009e0  080009e8  000109e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080009e0  080009e0  000109e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080009e4  080009e4  000109e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000109e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000000  080009e8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000034  080009e8  00020034  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000109e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000bea  00000000  00000000  00010a12  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000222  00000000  00000000  000115fc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011820  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  000118e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000012d9  00000000  00000000  00011978  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000ee0  00000000  00000000  00012c51  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000050f9  00000000  00000000  00013b31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  00018c2a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000023c  00000000  00000000  00018c80  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080009c8 	.word	0x080009c8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080009c8 	.word	0x080009c8

08000204 <main>:
#include "stm32f466xx_gpio_driver.h"

DRV_GPIO_PinHandle_t user_led_h;		// handle structure for the on-board LED ( PA5 )
DRV_GPIO_PinHandle_t button_h;			// user button is connect to PC13

int main(void){
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0

	// set the LED port
	user_led_h.pGPIOx = HAL_GPIOA;			// the on board LED is connected to Port A
 8000208:	4b20      	ldr	r3, [pc, #128]	; (800028c <main+0x88>)
 800020a:	4a21      	ldr	r2, [pc, #132]	; (8000290 <main+0x8c>)
 800020c:	601a      	str	r2, [r3, #0]
	// configure the LED pin
	user_led_h.PinConfig.PinNumber = 5;
 800020e:	4b1f      	ldr	r3, [pc, #124]	; (800028c <main+0x88>)
 8000210:	2205      	movs	r2, #5
 8000212:	711a      	strb	r2, [r3, #4]
	user_led_h.PinConfig.PinMode = GPIO_MODE_OUT;
 8000214:	4b1d      	ldr	r3, [pc, #116]	; (800028c <main+0x88>)
 8000216:	2201      	movs	r2, #1
 8000218:	715a      	strb	r2, [r3, #5]
	user_led_h.PinConfig.PinOPType = GPIO_OP_TYPE_PP;
 800021a:	4b1c      	ldr	r3, [pc, #112]	; (800028c <main+0x88>)
 800021c:	2200      	movs	r2, #0
 800021e:	721a      	strb	r2, [r3, #8]
	user_led_h.PinConfig.PinSpeed = GPIO_SPEED_FAST;
 8000220:	4b1a      	ldr	r3, [pc, #104]	; (800028c <main+0x88>)
 8000222:	2202      	movs	r2, #2
 8000224:	719a      	strb	r2, [r3, #6]
	user_led_h.PinConfig.PinPuPdControl = GPIO_PUPD_NO;
 8000226:	4b19      	ldr	r3, [pc, #100]	; (800028c <main+0x88>)
 8000228:	2200      	movs	r2, #0
 800022a:	71da      	strb	r2, [r3, #7]
	// enable the peripheral clock and init the pin
	DRV_GPIO_PCLKControl(user_led_h.pGPIOx, ENABLE);
 800022c:	4b17      	ldr	r3, [pc, #92]	; (800028c <main+0x88>)
 800022e:	681b      	ldr	r3, [r3, #0]
 8000230:	2101      	movs	r1, #1
 8000232:	4618      	mov	r0, r3
 8000234:	f000 f874 	bl	8000320 <DRV_GPIO_PCLKControl>
	DRV_GPIO_PinInit(&user_led_h);
 8000238:	4814      	ldr	r0, [pc, #80]	; (800028c <main+0x88>)
 800023a:	f000 f941 	bl	80004c0 <DRV_GPIO_PinInit>

	// Button pin handle
	button_h.pGPIOx = HAL_GPIOC;
 800023e:	4b15      	ldr	r3, [pc, #84]	; (8000294 <main+0x90>)
 8000240:	4a15      	ldr	r2, [pc, #84]	; (8000298 <main+0x94>)
 8000242:	601a      	str	r2, [r3, #0]
	button_h.PinConfig.PinNumber = 13;
 8000244:	4b13      	ldr	r3, [pc, #76]	; (8000294 <main+0x90>)
 8000246:	220d      	movs	r2, #13
 8000248:	711a      	strb	r2, [r3, #4]
	button_h.PinConfig.PinMode = GPIO_MODE_IT_FT;		// interrupt falling edge
 800024a:	4b12      	ldr	r3, [pc, #72]	; (8000294 <main+0x90>)
 800024c:	2204      	movs	r2, #4
 800024e:	715a      	strb	r2, [r3, #5]
	button_h.PinConfig.PinSpeed = GPIO_SPEED_FAST;
 8000250:	4b10      	ldr	r3, [pc, #64]	; (8000294 <main+0x90>)
 8000252:	2202      	movs	r2, #2
 8000254:	719a      	strb	r2, [r3, #6]
	button_h.PinConfig.PinPuPdControl = GPIO_PUPD_NO;
 8000256:	4b0f      	ldr	r3, [pc, #60]	; (8000294 <main+0x90>)
 8000258:	2200      	movs	r2, #0
 800025a:	71da      	strb	r2, [r3, #7]
	// enable the peripheral clock and init the pin
	DRV_GPIO_PCLKControl(button_h.pGPIOx, ENABLE);
 800025c:	4b0d      	ldr	r3, [pc, #52]	; (8000294 <main+0x90>)
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	2101      	movs	r1, #1
 8000262:	4618      	mov	r0, r3
 8000264:	f000 f85c 	bl	8000320 <DRV_GPIO_PCLKControl>
	HAL_SYSCFG_PCLK_En();	// SYSCFG needed for EXTI GPIO switching
 8000268:	4b0c      	ldr	r3, [pc, #48]	; (800029c <main+0x98>)
 800026a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800026c:	4a0b      	ldr	r2, [pc, #44]	; (800029c <main+0x98>)
 800026e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000272:	6453      	str	r3, [r2, #68]	; 0x44
	DRV_GPIO_PinInit(&button_h);
 8000274:	4807      	ldr	r0, [pc, #28]	; (8000294 <main+0x90>)
 8000276:	f000 f923 	bl	80004c0 <DRV_GPIO_PinInit>

	// IRQ settings
	DRV_GPIO_IRQEnable(HAL_IRQ_NUM_EXTI_13, ENABLE);
 800027a:	2101      	movs	r1, #1
 800027c:	2028      	movs	r0, #40	; 0x28
 800027e:	f000 fae1 	bl	8000844 <DRV_GPIO_IRQEnable>
	DRV_GPIO_IRQPriority(HAL_IRQ_NUM_EXTI_13, 15);
 8000282:	210f      	movs	r1, #15
 8000284:	2028      	movs	r0, #40	; 0x28
 8000286:	f000 fb2f 	bl	80008e8 <DRV_GPIO_IRQPriority>


	for(;;);
 800028a:	e7fe      	b.n	800028a <main+0x86>
 800028c:	2000001c 	.word	0x2000001c
 8000290:	40020000 	.word	0x40020000
 8000294:	20000028 	.word	0x20000028
 8000298:	40020800 	.word	0x40020800
 800029c:	40023800 	.word	0x40023800

080002a0 <EXTI15_10_IRQHandler>:

	return 0;
}

void EXTI15_10_IRQHandler(){
 80002a0:	b580      	push	{r7, lr}
 80002a2:	af00      	add	r7, sp, #0
	DRV_GPIO_IRQHandle(button_h.PinConfig.PinNumber);
 80002a4:	4b07      	ldr	r3, [pc, #28]	; (80002c4 <EXTI15_10_IRQHandler+0x24>)
 80002a6:	791b      	ldrb	r3, [r3, #4]
 80002a8:	4618      	mov	r0, r3
 80002aa:	f000 fb49 	bl	8000940 <DRV_GPIO_IRQHandle>

	DRV_GPIO_PinToggle(user_led_h.pGPIOx, user_led_h.PinConfig.PinNumber);
 80002ae:	4b06      	ldr	r3, [pc, #24]	; (80002c8 <EXTI15_10_IRQHandler+0x28>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	4a05      	ldr	r2, [pc, #20]	; (80002c8 <EXTI15_10_IRQHandler+0x28>)
 80002b4:	7912      	ldrb	r2, [r2, #4]
 80002b6:	4611      	mov	r1, r2
 80002b8:	4618      	mov	r0, r3
 80002ba:	f000 faaf 	bl	800081c <DRV_GPIO_PinToggle>
}
 80002be:	bf00      	nop
 80002c0:	bd80      	pop	{r7, pc}
 80002c2:	bf00      	nop
 80002c4:	20000028 	.word	0x20000028
 80002c8:	2000001c 	.word	0x2000001c

080002cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002cc:	480d      	ldr	r0, [pc, #52]	; (8000304 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002ce:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002d4:	480c      	ldr	r0, [pc, #48]	; (8000308 <LoopForever+0x6>)
  ldr r1, =_edata
 80002d6:	490d      	ldr	r1, [pc, #52]	; (800030c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d8:	4a0d      	ldr	r2, [pc, #52]	; (8000310 <LoopForever+0xe>)
  movs r3, #0
 80002da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002dc:	e002      	b.n	80002e4 <LoopCopyDataInit>

080002de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002e2:	3304      	adds	r3, #4

080002e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e8:	d3f9      	bcc.n	80002de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002ea:	4a0a      	ldr	r2, [pc, #40]	; (8000314 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002ec:	4c0a      	ldr	r4, [pc, #40]	; (8000318 <LoopForever+0x16>)
  movs r3, #0
 80002ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002f0:	e001      	b.n	80002f6 <LoopFillZerobss>

080002f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002f4:	3204      	adds	r2, #4

080002f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f8:	d3fb      	bcc.n	80002f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002fa:	f000 fb41 	bl	8000980 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002fe:	f7ff ff81 	bl	8000204 <main>

08000302 <LoopForever>:

LoopForever:
    b LoopForever
 8000302:	e7fe      	b.n	8000302 <LoopForever>
  ldr   r0, =_estack
 8000304:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000308:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800030c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000310:	080009e8 	.word	0x080009e8
  ldr r2, =_sbss
 8000314:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000318:	20000034 	.word	0x20000034

0800031c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800031c:	e7fe      	b.n	800031c <ADC_IRQHandler>
	...

08000320 <DRV_GPIO_PCLKControl>:
 *
 * @return		-	none
 *
 * @Note		-	none
 **********************************************/
void DRV_GPIO_PCLKControl(HAL_GPIO_RegDef_t* pGPIOx, uint8_t En_Di){
 8000320:	b480      	push	{r7}
 8000322:	b083      	sub	sp, #12
 8000324:	af00      	add	r7, sp, #0
 8000326:	6078      	str	r0, [r7, #4]
 8000328:	460b      	mov	r3, r1
 800032a:	70fb      	strb	r3, [r7, #3]
	if(En_Di == ENABLE){
 800032c:	78fb      	ldrb	r3, [r7, #3]
 800032e:	2b01      	cmp	r3, #1
 8000330:	d157      	bne.n	80003e2 <DRV_GPIO_PCLKControl+0xc2>
			 if(pGPIOx == HAL_GPIOA)	{HAL_GPIOA_PCLK_En();}
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	4a59      	ldr	r2, [pc, #356]	; (800049c <DRV_GPIO_PCLKControl+0x17c>)
 8000336:	4293      	cmp	r3, r2
 8000338:	d106      	bne.n	8000348 <DRV_GPIO_PCLKControl+0x28>
 800033a:	4b59      	ldr	r3, [pc, #356]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800033c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033e:	4a58      	ldr	r2, [pc, #352]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000340:	f043 0301 	orr.w	r3, r3, #1
 8000344:	6313      	str	r3, [r2, #48]	; 0x30
		else if(pGPIOx == HAL_GPIOE)	HAL_GPIOE_PCLK_Di();
		else if(pGPIOx == HAL_GPIOF)	HAL_GPIOF_PCLK_Di();
		else if(pGPIOx == HAL_GPIOG)	HAL_GPIOG_PCLK_Di();
		else if(pGPIOx == HAL_GPIOH)	HAL_GPIOH_PCLK_Di();
	}
}
 8000346:	e0a3      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOB)	{HAL_GPIOB_PCLK_En();}
 8000348:	687b      	ldr	r3, [r7, #4]
 800034a:	4a56      	ldr	r2, [pc, #344]	; (80004a4 <DRV_GPIO_PCLKControl+0x184>)
 800034c:	4293      	cmp	r3, r2
 800034e:	d106      	bne.n	800035e <DRV_GPIO_PCLKControl+0x3e>
 8000350:	4b53      	ldr	r3, [pc, #332]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000352:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000354:	4a52      	ldr	r2, [pc, #328]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000356:	f043 0302 	orr.w	r3, r3, #2
 800035a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035c:	e098      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOC)	{HAL_GPIOC_PCLK_En();}
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	4a51      	ldr	r2, [pc, #324]	; (80004a8 <DRV_GPIO_PCLKControl+0x188>)
 8000362:	4293      	cmp	r3, r2
 8000364:	d106      	bne.n	8000374 <DRV_GPIO_PCLKControl+0x54>
 8000366:	4b4e      	ldr	r3, [pc, #312]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000368:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800036a:	4a4d      	ldr	r2, [pc, #308]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800036c:	f043 0304 	orr.w	r3, r3, #4
 8000370:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000372:	e08d      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOD)	{HAL_GPIOD_PCLK_En();}
 8000374:	687b      	ldr	r3, [r7, #4]
 8000376:	4a4d      	ldr	r2, [pc, #308]	; (80004ac <DRV_GPIO_PCLKControl+0x18c>)
 8000378:	4293      	cmp	r3, r2
 800037a:	d106      	bne.n	800038a <DRV_GPIO_PCLKControl+0x6a>
 800037c:	4b48      	ldr	r3, [pc, #288]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800037e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000380:	4a47      	ldr	r2, [pc, #284]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000382:	f043 0308 	orr.w	r3, r3, #8
 8000386:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000388:	e082      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOE)	{HAL_GPIOE_PCLK_En();}
 800038a:	687b      	ldr	r3, [r7, #4]
 800038c:	4a48      	ldr	r2, [pc, #288]	; (80004b0 <DRV_GPIO_PCLKControl+0x190>)
 800038e:	4293      	cmp	r3, r2
 8000390:	d106      	bne.n	80003a0 <DRV_GPIO_PCLKControl+0x80>
 8000392:	4b43      	ldr	r3, [pc, #268]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000396:	4a42      	ldr	r2, [pc, #264]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000398:	f043 0310 	orr.w	r3, r3, #16
 800039c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800039e:	e077      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOF)	{HAL_GPIOF_PCLK_En();}
 80003a0:	687b      	ldr	r3, [r7, #4]
 80003a2:	4a44      	ldr	r2, [pc, #272]	; (80004b4 <DRV_GPIO_PCLKControl+0x194>)
 80003a4:	4293      	cmp	r3, r2
 80003a6:	d106      	bne.n	80003b6 <DRV_GPIO_PCLKControl+0x96>
 80003a8:	4b3d      	ldr	r3, [pc, #244]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ac:	4a3c      	ldr	r2, [pc, #240]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003ae:	f043 0320 	orr.w	r3, r3, #32
 80003b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003b4:	e06c      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOG)	{HAL_GPIOG_PCLK_En();}
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	4a3f      	ldr	r2, [pc, #252]	; (80004b8 <DRV_GPIO_PCLKControl+0x198>)
 80003ba:	4293      	cmp	r3, r2
 80003bc:	d106      	bne.n	80003cc <DRV_GPIO_PCLKControl+0xac>
 80003be:	4b38      	ldr	r3, [pc, #224]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003c2:	4a37      	ldr	r2, [pc, #220]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003c4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003c8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ca:	e061      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOH)	{HAL_GPIOH_PCLK_En();}
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	4a3b      	ldr	r2, [pc, #236]	; (80004bc <DRV_GPIO_PCLKControl+0x19c>)
 80003d0:	4293      	cmp	r3, r2
 80003d2:	d15d      	bne.n	8000490 <DRV_GPIO_PCLKControl+0x170>
 80003d4:	4b32      	ldr	r3, [pc, #200]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d8:	4a31      	ldr	r2, [pc, #196]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003da:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003de:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003e0:	e056      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
			 if(pGPIOx == HAL_GPIOA)	HAL_GPIOA_PCLK_Di();
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	4a2d      	ldr	r2, [pc, #180]	; (800049c <DRV_GPIO_PCLKControl+0x17c>)
 80003e6:	4293      	cmp	r3, r2
 80003e8:	d106      	bne.n	80003f8 <DRV_GPIO_PCLKControl+0xd8>
 80003ea:	4b2d      	ldr	r3, [pc, #180]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ee:	4a2c      	ldr	r2, [pc, #176]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 80003f0:	f023 0301 	bic.w	r3, r3, #1
 80003f4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003f6:	e04b      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOB)	HAL_GPIOB_PCLK_Di();
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	4a2a      	ldr	r2, [pc, #168]	; (80004a4 <DRV_GPIO_PCLKControl+0x184>)
 80003fc:	4293      	cmp	r3, r2
 80003fe:	d106      	bne.n	800040e <DRV_GPIO_PCLKControl+0xee>
 8000400:	4b27      	ldr	r3, [pc, #156]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000402:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000404:	4a26      	ldr	r2, [pc, #152]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000406:	f023 0302 	bic.w	r3, r3, #2
 800040a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800040c:	e040      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOC)	HAL_GPIOC_PCLK_Di();
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	4a25      	ldr	r2, [pc, #148]	; (80004a8 <DRV_GPIO_PCLKControl+0x188>)
 8000412:	4293      	cmp	r3, r2
 8000414:	d106      	bne.n	8000424 <DRV_GPIO_PCLKControl+0x104>
 8000416:	4b22      	ldr	r3, [pc, #136]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000418:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800041a:	4a21      	ldr	r2, [pc, #132]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800041c:	f023 0304 	bic.w	r3, r3, #4
 8000420:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000422:	e035      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOD)	HAL_GPIOD_PCLK_Di();
 8000424:	687b      	ldr	r3, [r7, #4]
 8000426:	4a21      	ldr	r2, [pc, #132]	; (80004ac <DRV_GPIO_PCLKControl+0x18c>)
 8000428:	4293      	cmp	r3, r2
 800042a:	d106      	bne.n	800043a <DRV_GPIO_PCLKControl+0x11a>
 800042c:	4b1c      	ldr	r3, [pc, #112]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800042e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000430:	4a1b      	ldr	r2, [pc, #108]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000432:	f023 0308 	bic.w	r3, r3, #8
 8000436:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000438:	e02a      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOE)	HAL_GPIOE_PCLK_Di();
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4a1c      	ldr	r2, [pc, #112]	; (80004b0 <DRV_GPIO_PCLKControl+0x190>)
 800043e:	4293      	cmp	r3, r2
 8000440:	d106      	bne.n	8000450 <DRV_GPIO_PCLKControl+0x130>
 8000442:	4b17      	ldr	r3, [pc, #92]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000444:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000446:	4a16      	ldr	r2, [pc, #88]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000448:	f023 0310 	bic.w	r3, r3, #16
 800044c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800044e:	e01f      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOF)	HAL_GPIOF_PCLK_Di();
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	4a18      	ldr	r2, [pc, #96]	; (80004b4 <DRV_GPIO_PCLKControl+0x194>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d106      	bne.n	8000466 <DRV_GPIO_PCLKControl+0x146>
 8000458:	4b11      	ldr	r3, [pc, #68]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800045a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800045c:	4a10      	ldr	r2, [pc, #64]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800045e:	f023 0320 	bic.w	r3, r3, #32
 8000462:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000464:	e014      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOG)	HAL_GPIOG_PCLK_Di();
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	4a13      	ldr	r2, [pc, #76]	; (80004b8 <DRV_GPIO_PCLKControl+0x198>)
 800046a:	4293      	cmp	r3, r2
 800046c:	d106      	bne.n	800047c <DRV_GPIO_PCLKControl+0x15c>
 800046e:	4b0c      	ldr	r3, [pc, #48]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000470:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000472:	4a0b      	ldr	r2, [pc, #44]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000474:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000478:	6313      	str	r3, [r2, #48]	; 0x30
}
 800047a:	e009      	b.n	8000490 <DRV_GPIO_PCLKControl+0x170>
		else if(pGPIOx == HAL_GPIOH)	HAL_GPIOH_PCLK_Di();
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	4a0f      	ldr	r2, [pc, #60]	; (80004bc <DRV_GPIO_PCLKControl+0x19c>)
 8000480:	4293      	cmp	r3, r2
 8000482:	d105      	bne.n	8000490 <DRV_GPIO_PCLKControl+0x170>
 8000484:	4b06      	ldr	r3, [pc, #24]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 8000486:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000488:	4a05      	ldr	r2, [pc, #20]	; (80004a0 <DRV_GPIO_PCLKControl+0x180>)
 800048a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800048e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000490:	bf00      	nop
 8000492:	370c      	adds	r7, #12
 8000494:	46bd      	mov	sp, r7
 8000496:	bc80      	pop	{r7}
 8000498:	4770      	bx	lr
 800049a:	bf00      	nop
 800049c:	40020000 	.word	0x40020000
 80004a0:	40023800 	.word	0x40023800
 80004a4:	40020400 	.word	0x40020400
 80004a8:	40020800 	.word	0x40020800
 80004ac:	40020c00 	.word	0x40020c00
 80004b0:	40021000 	.word	0x40021000
 80004b4:	40021400 	.word	0x40021400
 80004b8:	40021800 	.word	0x40021800
 80004bc:	40021c00 	.word	0x40021c00

080004c0 <DRV_GPIO_PinInit>:
 *
 * @return		-	none
 *
 * @Note		-	Enable the peripheral clock first
 **********************************************/
void DRV_GPIO_PinInit(DRV_GPIO_PinHandle_t* pGPIO_PinHandle){
 80004c0:	b480      	push	{r7}
 80004c2:	b087      	sub	sp, #28
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]

	uint32_t temp = 0;
 80004c8:	2300      	movs	r3, #0
 80004ca:	613b      	str	r3, [r7, #16]
	uint32_t shift = 0;
 80004cc:	2300      	movs	r3, #0
 80004ce:	617b      	str	r3, [r7, #20]

	// 1. mode configuration
	if(pGPIO_PinHandle->PinConfig.PinMode <= GPIO_MODE_ANALOG){
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	795b      	ldrb	r3, [r3, #5]
 80004d4:	2b03      	cmp	r3, #3
 80004d6:	d820      	bhi.n	800051a <DRV_GPIO_PinInit+0x5a>
		// non interrupt modes
		// get the two config bits in place
		shift = 2 * pGPIO_PinHandle->PinConfig.PinNumber;
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	791b      	ldrb	r3, [r3, #4]
 80004dc:	005b      	lsls	r3, r3, #1
 80004de:	617b      	str	r3, [r7, #20]
		temp = (pGPIO_PinHandle->PinConfig.PinMode << shift);
 80004e0:	687b      	ldr	r3, [r7, #4]
 80004e2:	795b      	ldrb	r3, [r3, #5]
 80004e4:	461a      	mov	r2, r3
 80004e6:	697b      	ldr	r3, [r7, #20]
 80004e8:	fa02 f303 	lsl.w	r3, r2, r3
 80004ec:	613b      	str	r3, [r7, #16]
		// reset the respective two bits in register
		pGPIO_PinHandle->pGPIOx->MODER &= ~(0x11 << shift);
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	681b      	ldr	r3, [r3, #0]
 80004f2:	681a      	ldr	r2, [r3, #0]
 80004f4:	2111      	movs	r1, #17
 80004f6:	697b      	ldr	r3, [r7, #20]
 80004f8:	fa01 f303 	lsl.w	r3, r1, r3
 80004fc:	43db      	mvns	r3, r3
 80004fe:	4619      	mov	r1, r3
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	400a      	ands	r2, r1
 8000506:	601a      	str	r2, [r3, #0]
		// write the two config bits
		pGPIO_PinHandle->pGPIOx->MODER |= temp;
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	6819      	ldr	r1, [r3, #0]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	693a      	ldr	r2, [r7, #16]
 8000514:	430a      	orrs	r2, r1
 8000516:	601a      	str	r2, [r3, #0]
 8000518:	e0d4      	b.n	80006c4 <DRV_GPIO_PinInit+0x204>


	}else{
		// interrupt modes
		// configure the falling/rising trigger selection
		if(pGPIO_PinHandle->PinConfig.PinMode == GPIO_MODE_IT_FT){
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	795b      	ldrb	r3, [r3, #5]
 800051e:	2b04      	cmp	r3, #4
 8000520:	d117      	bne.n	8000552 <DRV_GPIO_PinInit+0x92>
			HAL_EXTI->FTSR |= (1 << pGPIO_PinHandle->PinConfig.PinNumber); // set falling selection
 8000522:	4b49      	ldr	r3, [pc, #292]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 8000524:	68db      	ldr	r3, [r3, #12]
 8000526:	687a      	ldr	r2, [r7, #4]
 8000528:	7912      	ldrb	r2, [r2, #4]
 800052a:	4611      	mov	r1, r2
 800052c:	2201      	movs	r2, #1
 800052e:	408a      	lsls	r2, r1
 8000530:	4611      	mov	r1, r2
 8000532:	4a45      	ldr	r2, [pc, #276]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 8000534:	430b      	orrs	r3, r1
 8000536:	60d3      	str	r3, [r2, #12]
			HAL_EXTI->RTSR &= ~(1 << pGPIO_PinHandle->PinConfig.PinNumber);// clear rising selection
 8000538:	4b43      	ldr	r3, [pc, #268]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 800053a:	689b      	ldr	r3, [r3, #8]
 800053c:	687a      	ldr	r2, [r7, #4]
 800053e:	7912      	ldrb	r2, [r2, #4]
 8000540:	4611      	mov	r1, r2
 8000542:	2201      	movs	r2, #1
 8000544:	408a      	lsls	r2, r1
 8000546:	43d2      	mvns	r2, r2
 8000548:	4611      	mov	r1, r2
 800054a:	4a3f      	ldr	r2, [pc, #252]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 800054c:	400b      	ands	r3, r1
 800054e:	6093      	str	r3, [r2, #8]
 8000550:	e035      	b.n	80005be <DRV_GPIO_PinInit+0xfe>
		}else if(pGPIO_PinHandle->PinConfig.PinMode == GPIO_MODE_IT_RT){
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	795b      	ldrb	r3, [r3, #5]
 8000556:	2b05      	cmp	r3, #5
 8000558:	d117      	bne.n	800058a <DRV_GPIO_PinInit+0xca>
			HAL_EXTI->RTSR |= (1 << pGPIO_PinHandle->PinConfig.PinNumber); // set rising selection
 800055a:	4b3b      	ldr	r3, [pc, #236]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 800055c:	689b      	ldr	r3, [r3, #8]
 800055e:	687a      	ldr	r2, [r7, #4]
 8000560:	7912      	ldrb	r2, [r2, #4]
 8000562:	4611      	mov	r1, r2
 8000564:	2201      	movs	r2, #1
 8000566:	408a      	lsls	r2, r1
 8000568:	4611      	mov	r1, r2
 800056a:	4a37      	ldr	r2, [pc, #220]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 800056c:	430b      	orrs	r3, r1
 800056e:	6093      	str	r3, [r2, #8]
			HAL_EXTI->FTSR &= ~(1 << pGPIO_PinHandle->PinConfig.PinNumber);// clear falling selection
 8000570:	4b35      	ldr	r3, [pc, #212]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 8000572:	68db      	ldr	r3, [r3, #12]
 8000574:	687a      	ldr	r2, [r7, #4]
 8000576:	7912      	ldrb	r2, [r2, #4]
 8000578:	4611      	mov	r1, r2
 800057a:	2201      	movs	r2, #1
 800057c:	408a      	lsls	r2, r1
 800057e:	43d2      	mvns	r2, r2
 8000580:	4611      	mov	r1, r2
 8000582:	4a31      	ldr	r2, [pc, #196]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 8000584:	400b      	ands	r3, r1
 8000586:	60d3      	str	r3, [r2, #12]
 8000588:	e019      	b.n	80005be <DRV_GPIO_PinInit+0xfe>
		}else if(pGPIO_PinHandle->PinConfig.PinMode == GPIO_MODE_IT_FRT){
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	795b      	ldrb	r3, [r3, #5]
 800058e:	2b06      	cmp	r3, #6
 8000590:	d115      	bne.n	80005be <DRV_GPIO_PinInit+0xfe>
			HAL_EXTI->FTSR |= (1 << pGPIO_PinHandle->PinConfig.PinNumber); // set falling selection
 8000592:	4b2d      	ldr	r3, [pc, #180]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 8000594:	68db      	ldr	r3, [r3, #12]
 8000596:	687a      	ldr	r2, [r7, #4]
 8000598:	7912      	ldrb	r2, [r2, #4]
 800059a:	4611      	mov	r1, r2
 800059c:	2201      	movs	r2, #1
 800059e:	408a      	lsls	r2, r1
 80005a0:	4611      	mov	r1, r2
 80005a2:	4a29      	ldr	r2, [pc, #164]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 80005a4:	430b      	orrs	r3, r1
 80005a6:	60d3      	str	r3, [r2, #12]
			HAL_EXTI->RTSR |= (1 << pGPIO_PinHandle->PinConfig.PinNumber); // set rising selection
 80005a8:	4b27      	ldr	r3, [pc, #156]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 80005aa:	689b      	ldr	r3, [r3, #8]
 80005ac:	687a      	ldr	r2, [r7, #4]
 80005ae:	7912      	ldrb	r2, [r2, #4]
 80005b0:	4611      	mov	r1, r2
 80005b2:	2201      	movs	r2, #1
 80005b4:	408a      	lsls	r2, r1
 80005b6:	4611      	mov	r1, r2
 80005b8:	4a23      	ldr	r2, [pc, #140]	; (8000648 <DRV_GPIO_PinInit+0x188>)
 80005ba:	430b      	orrs	r3, r1
 80005bc:	6093      	str	r3, [r2, #8]
		}

		// select the GPIO port in SYSCFG
		uint8_t reg_select = pGPIO_PinHandle->PinConfig.PinNumber / 4;
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	791b      	ldrb	r3, [r3, #4]
 80005c2:	089b      	lsrs	r3, r3, #2
 80005c4:	73fb      	strb	r3, [r7, #15]
		uint8_t shift = (pGPIO_PinHandle->PinConfig.PinNumber % 4) * 4;
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	791b      	ldrb	r3, [r3, #4]
 80005ca:	f003 0303 	and.w	r3, r3, #3
 80005ce:	b2db      	uxtb	r3, r3
 80005d0:	009b      	lsls	r3, r3, #2
 80005d2:	73bb      	strb	r3, [r7, #14]
		uint32_t port_code = HAL_GPIOX_CODE(pGPIO_PinHandle->pGPIOx);
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	4a1c      	ldr	r2, [pc, #112]	; (800064c <DRV_GPIO_PinInit+0x18c>)
 80005da:	4293      	cmp	r3, r2
 80005dc:	d046      	beq.n	800066c <DRV_GPIO_PinInit+0x1ac>
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	681b      	ldr	r3, [r3, #0]
 80005e2:	4a1b      	ldr	r2, [pc, #108]	; (8000650 <DRV_GPIO_PinInit+0x190>)
 80005e4:	4293      	cmp	r3, r2
 80005e6:	d02c      	beq.n	8000642 <DRV_GPIO_PinInit+0x182>
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	4a19      	ldr	r2, [pc, #100]	; (8000654 <DRV_GPIO_PinInit+0x194>)
 80005ee:	4293      	cmp	r3, r2
 80005f0:	d025      	beq.n	800063e <DRV_GPIO_PinInit+0x17e>
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	4a18      	ldr	r2, [pc, #96]	; (8000658 <DRV_GPIO_PinInit+0x198>)
 80005f8:	4293      	cmp	r3, r2
 80005fa:	d01e      	beq.n	800063a <DRV_GPIO_PinInit+0x17a>
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	4a16      	ldr	r2, [pc, #88]	; (800065c <DRV_GPIO_PinInit+0x19c>)
 8000602:	4293      	cmp	r3, r2
 8000604:	d017      	beq.n	8000636 <DRV_GPIO_PinInit+0x176>
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	4a15      	ldr	r2, [pc, #84]	; (8000660 <DRV_GPIO_PinInit+0x1a0>)
 800060c:	4293      	cmp	r3, r2
 800060e:	d010      	beq.n	8000632 <DRV_GPIO_PinInit+0x172>
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	4a13      	ldr	r2, [pc, #76]	; (8000664 <DRV_GPIO_PinInit+0x1a4>)
 8000616:	4293      	cmp	r3, r2
 8000618:	d009      	beq.n	800062e <DRV_GPIO_PinInit+0x16e>
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	4a12      	ldr	r2, [pc, #72]	; (8000668 <DRV_GPIO_PinInit+0x1a8>)
 8000620:	4293      	cmp	r3, r2
 8000622:	d101      	bne.n	8000628 <DRV_GPIO_PinInit+0x168>
 8000624:	2307      	movs	r3, #7
 8000626:	e022      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 8000628:	f04f 33ff 	mov.w	r3, #4294967295
 800062c:	e01f      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 800062e:	2306      	movs	r3, #6
 8000630:	e01d      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 8000632:	2305      	movs	r3, #5
 8000634:	e01b      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 8000636:	2304      	movs	r3, #4
 8000638:	e019      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 800063a:	2303      	movs	r3, #3
 800063c:	e017      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 800063e:	2302      	movs	r3, #2
 8000640:	e015      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 8000642:	2301      	movs	r3, #1
 8000644:	e013      	b.n	800066e <DRV_GPIO_PinInit+0x1ae>
 8000646:	bf00      	nop
 8000648:	40013c00 	.word	0x40013c00
 800064c:	40020000 	.word	0x40020000
 8000650:	40020400 	.word	0x40020400
 8000654:	40020800 	.word	0x40020800
 8000658:	40020c00 	.word	0x40020c00
 800065c:	40021000 	.word	0x40021000
 8000660:	40021400 	.word	0x40021400
 8000664:	40021800 	.word	0x40021800
 8000668:	40021c00 	.word	0x40021c00
 800066c:	2300      	movs	r3, #0
 800066e:	60bb      	str	r3, [r7, #8]
		HAL_SYSCFG->EXTI_CR[reg_select] &= ~(0xF << shift);			// clear the respective bits
 8000670:	4a68      	ldr	r2, [pc, #416]	; (8000814 <DRV_GPIO_PinInit+0x354>)
 8000672:	7bfb      	ldrb	r3, [r7, #15]
 8000674:	3302      	adds	r3, #2
 8000676:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800067a:	7bbb      	ldrb	r3, [r7, #14]
 800067c:	210f      	movs	r1, #15
 800067e:	fa01 f303 	lsl.w	r3, r1, r3
 8000682:	43db      	mvns	r3, r3
 8000684:	4618      	mov	r0, r3
 8000686:	4963      	ldr	r1, [pc, #396]	; (8000814 <DRV_GPIO_PinInit+0x354>)
 8000688:	7bfb      	ldrb	r3, [r7, #15]
 800068a:	4002      	ands	r2, r0
 800068c:	3302      	adds	r3, #2
 800068e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		HAL_SYSCFG->EXTI_CR[reg_select] |= (port_code << shift);	// set the respective bits
 8000692:	4a60      	ldr	r2, [pc, #384]	; (8000814 <DRV_GPIO_PinInit+0x354>)
 8000694:	7bfb      	ldrb	r3, [r7, #15]
 8000696:	3302      	adds	r3, #2
 8000698:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800069c:	7bbb      	ldrb	r3, [r7, #14]
 800069e:	68ba      	ldr	r2, [r7, #8]
 80006a0:	409a      	lsls	r2, r3
 80006a2:	485c      	ldr	r0, [pc, #368]	; (8000814 <DRV_GPIO_PinInit+0x354>)
 80006a4:	7bfb      	ldrb	r3, [r7, #15]
 80006a6:	430a      	orrs	r2, r1
 80006a8:	3302      	adds	r3, #2
 80006aa:	f840 2023 	str.w	r2, [r0, r3, lsl #2]

		// enable the interrupt on the EXTI line using IMR
		HAL_EXTI->IMR |= (1 << pGPIO_PinHandle->PinConfig.PinNumber);
 80006ae:	4b5a      	ldr	r3, [pc, #360]	; (8000818 <DRV_GPIO_PinInit+0x358>)
 80006b0:	681b      	ldr	r3, [r3, #0]
 80006b2:	687a      	ldr	r2, [r7, #4]
 80006b4:	7912      	ldrb	r2, [r2, #4]
 80006b6:	4611      	mov	r1, r2
 80006b8:	2201      	movs	r2, #1
 80006ba:	408a      	lsls	r2, r1
 80006bc:	4611      	mov	r1, r2
 80006be:	4a56      	ldr	r2, [pc, #344]	; (8000818 <DRV_GPIO_PinInit+0x358>)
 80006c0:	430b      	orrs	r3, r1
 80006c2:	6013      	str	r3, [r2, #0]
	}


	// speed
	// shift = 2 * pGPIO_PinHandle->PinConfig.PinNumber;
	temp = (pGPIO_PinHandle->PinConfig.PinSpeed << shift);
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	799b      	ldrb	r3, [r3, #6]
 80006c8:	461a      	mov	r2, r3
 80006ca:	697b      	ldr	r3, [r7, #20]
 80006cc:	fa02 f303 	lsl.w	r3, r2, r3
 80006d0:	613b      	str	r3, [r7, #16]
	pGPIO_PinHandle->pGPIOx->OSPEEDER &= ~(0x11 << shift);
 80006d2:	687b      	ldr	r3, [r7, #4]
 80006d4:	681b      	ldr	r3, [r3, #0]
 80006d6:	689a      	ldr	r2, [r3, #8]
 80006d8:	2111      	movs	r1, #17
 80006da:	697b      	ldr	r3, [r7, #20]
 80006dc:	fa01 f303 	lsl.w	r3, r1, r3
 80006e0:	43db      	mvns	r3, r3
 80006e2:	4619      	mov	r1, r3
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	681b      	ldr	r3, [r3, #0]
 80006e8:	400a      	ands	r2, r1
 80006ea:	609a      	str	r2, [r3, #8]
	pGPIO_PinHandle->pGPIOx->OSPEEDER |= temp;
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	6899      	ldr	r1, [r3, #8]
 80006f2:	687b      	ldr	r3, [r7, #4]
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	693a      	ldr	r2, [r7, #16]
 80006f8:	430a      	orrs	r2, r1
 80006fa:	609a      	str	r2, [r3, #8]

	// pull up pull down
	// shift = 2 * pGPIO_PinHandle->PinConfig.PinNumber;
	temp = (pGPIO_PinHandle->PinConfig.PinPuPdControl << shift);
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	79db      	ldrb	r3, [r3, #7]
 8000700:	461a      	mov	r2, r3
 8000702:	697b      	ldr	r3, [r7, #20]
 8000704:	fa02 f303 	lsl.w	r3, r2, r3
 8000708:	613b      	str	r3, [r7, #16]
	pGPIO_PinHandle->pGPIOx->PUPDR &= ~(0x11 << shift);
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	68da      	ldr	r2, [r3, #12]
 8000710:	2111      	movs	r1, #17
 8000712:	697b      	ldr	r3, [r7, #20]
 8000714:	fa01 f303 	lsl.w	r3, r1, r3
 8000718:	43db      	mvns	r3, r3
 800071a:	4619      	mov	r1, r3
 800071c:	687b      	ldr	r3, [r7, #4]
 800071e:	681b      	ldr	r3, [r3, #0]
 8000720:	400a      	ands	r2, r1
 8000722:	60da      	str	r2, [r3, #12]
	pGPIO_PinHandle->pGPIOx->PUPDR |= temp;
 8000724:	687b      	ldr	r3, [r7, #4]
 8000726:	681b      	ldr	r3, [r3, #0]
 8000728:	68d9      	ldr	r1, [r3, #12]
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	693a      	ldr	r2, [r7, #16]
 8000730:	430a      	orrs	r2, r1
 8000732:	60da      	str	r2, [r3, #12]

	// output type
	shift = 1 * pGPIO_PinHandle->PinConfig.PinNumber;
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	791b      	ldrb	r3, [r3, #4]
 8000738:	617b      	str	r3, [r7, #20]
	temp = (pGPIO_PinHandle->PinConfig.PinOPType << shift);
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	7a1b      	ldrb	r3, [r3, #8]
 800073e:	461a      	mov	r2, r3
 8000740:	697b      	ldr	r3, [r7, #20]
 8000742:	fa02 f303 	lsl.w	r3, r2, r3
 8000746:	613b      	str	r3, [r7, #16]
	pGPIO_PinHandle->pGPIOx->OTYPER &= ~(0x1 << shift);
 8000748:	687b      	ldr	r3, [r7, #4]
 800074a:	681b      	ldr	r3, [r3, #0]
 800074c:	685a      	ldr	r2, [r3, #4]
 800074e:	2101      	movs	r1, #1
 8000750:	697b      	ldr	r3, [r7, #20]
 8000752:	fa01 f303 	lsl.w	r3, r1, r3
 8000756:	43db      	mvns	r3, r3
 8000758:	4619      	mov	r1, r3
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	681b      	ldr	r3, [r3, #0]
 800075e:	400a      	ands	r2, r1
 8000760:	605a      	str	r2, [r3, #4]
	pGPIO_PinHandle->pGPIOx->OTYPER |= temp;
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	681b      	ldr	r3, [r3, #0]
 8000766:	6859      	ldr	r1, [r3, #4]
 8000768:	687b      	ldr	r3, [r7, #4]
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	693a      	ldr	r2, [r7, #16]
 800076e:	430a      	orrs	r2, r1
 8000770:	605a      	str	r2, [r3, #4]


	// alternative function
	if( pGPIO_PinHandle->PinConfig.PinMode == GPIO_MODE_ALTFN){
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	795b      	ldrb	r3, [r3, #5]
 8000776:	2b02      	cmp	r3, #2
 8000778:	d147      	bne.n	800080a <DRV_GPIO_PinInit+0x34a>
		// configure the Alternate Function
		if(pGPIO_PinHandle->PinConfig.PinNumber < 8){
 800077a:	687b      	ldr	r3, [r7, #4]
 800077c:	791b      	ldrb	r3, [r3, #4]
 800077e:	2b07      	cmp	r3, #7
 8000780:	d821      	bhi.n	80007c6 <DRV_GPIO_PinInit+0x306>
			// use the low register
			shift = 4 * pGPIO_PinHandle->PinConfig.PinNumber;
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	791b      	ldrb	r3, [r3, #4]
 8000786:	009b      	lsls	r3, r3, #2
 8000788:	617b      	str	r3, [r7, #20]
			temp = (pGPIO_PinHandle->PinConfig.PinAltFunMode << shift);
 800078a:	687b      	ldr	r3, [r7, #4]
 800078c:	7a5b      	ldrb	r3, [r3, #9]
 800078e:	461a      	mov	r2, r3
 8000790:	697b      	ldr	r3, [r7, #20]
 8000792:	fa02 f303 	lsl.w	r3, r2, r3
 8000796:	613b      	str	r3, [r7, #16]
			pGPIO_PinHandle->pGPIOx->AFRL &= ~(0x1111 << shift);
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	6a1a      	ldr	r2, [r3, #32]
 800079e:	f241 1111 	movw	r1, #4369	; 0x1111
 80007a2:	697b      	ldr	r3, [r7, #20]
 80007a4:	fa01 f303 	lsl.w	r3, r1, r3
 80007a8:	43db      	mvns	r3, r3
 80007aa:	4619      	mov	r1, r3
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	400a      	ands	r2, r1
 80007b2:	621a      	str	r2, [r3, #32]
			pGPIO_PinHandle->pGPIOx->AFRL |= temp;
 80007b4:	687b      	ldr	r3, [r7, #4]
 80007b6:	681b      	ldr	r3, [r3, #0]
 80007b8:	6a19      	ldr	r1, [r3, #32]
 80007ba:	687b      	ldr	r3, [r7, #4]
 80007bc:	681b      	ldr	r3, [r3, #0]
 80007be:	693a      	ldr	r2, [r7, #16]
 80007c0:	430a      	orrs	r2, r1
 80007c2:	621a      	str	r2, [r3, #32]
			pGPIO_PinHandle->pGPIOx->AFRH &= ~(0x1111 << shift);
			pGPIO_PinHandle->pGPIOx->AFRH |= temp;

		}
	}
}
 80007c4:	e021      	b.n	800080a <DRV_GPIO_PinInit+0x34a>
			shift = 4 * (pGPIO_PinHandle->PinConfig.PinNumber - 8);
 80007c6:	687b      	ldr	r3, [r7, #4]
 80007c8:	791b      	ldrb	r3, [r3, #4]
 80007ca:	3b08      	subs	r3, #8
 80007cc:	009b      	lsls	r3, r3, #2
 80007ce:	617b      	str	r3, [r7, #20]
			temp = (pGPIO_PinHandle->PinConfig.PinAltFunMode << shift);
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	7a5b      	ldrb	r3, [r3, #9]
 80007d4:	461a      	mov	r2, r3
 80007d6:	697b      	ldr	r3, [r7, #20]
 80007d8:	fa02 f303 	lsl.w	r3, r2, r3
 80007dc:	613b      	str	r3, [r7, #16]
			pGPIO_PinHandle->pGPIOx->AFRH &= ~(0x1111 << shift);
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	681b      	ldr	r3, [r3, #0]
 80007e2:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80007e4:	f241 1111 	movw	r1, #4369	; 0x1111
 80007e8:	697b      	ldr	r3, [r7, #20]
 80007ea:	fa01 f303 	lsl.w	r3, r1, r3
 80007ee:	43db      	mvns	r3, r3
 80007f0:	4619      	mov	r1, r3
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	681b      	ldr	r3, [r3, #0]
 80007f6:	400a      	ands	r2, r1
 80007f8:	625a      	str	r2, [r3, #36]	; 0x24
			pGPIO_PinHandle->pGPIOx->AFRH |= temp;
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	681b      	ldr	r3, [r3, #0]
 80007fe:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	693a      	ldr	r2, [r7, #16]
 8000806:	430a      	orrs	r2, r1
 8000808:	625a      	str	r2, [r3, #36]	; 0x24
}
 800080a:	bf00      	nop
 800080c:	371c      	adds	r7, #28
 800080e:	46bd      	mov	sp, r7
 8000810:	bc80      	pop	{r7}
 8000812:	4770      	bx	lr
 8000814:	40013800 	.word	0x40013800
 8000818:	40013c00 	.word	0x40013c00

0800081c <DRV_GPIO_PinToggle>:
 *
 * @return		-	none
 *
 * @Note		-	none
 **********************************************/
void DRV_GPIO_PinToggle(HAL_GPIO_RegDef_t* pGPIOx, uint8_t PinNumber){
 800081c:	b480      	push	{r7}
 800081e:	b083      	sub	sp, #12
 8000820:	af00      	add	r7, sp, #0
 8000822:	6078      	str	r0, [r7, #4]
 8000824:	460b      	mov	r3, r1
 8000826:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	695b      	ldr	r3, [r3, #20]
 800082c:	78fa      	ldrb	r2, [r7, #3]
 800082e:	2101      	movs	r1, #1
 8000830:	fa01 f202 	lsl.w	r2, r1, r2
 8000834:	405a      	eors	r2, r3
 8000836:	687b      	ldr	r3, [r7, #4]
 8000838:	615a      	str	r2, [r3, #20]
}
 800083a:	bf00      	nop
 800083c:	370c      	adds	r7, #12
 800083e:	46bd      	mov	sp, r7
 8000840:	bc80      	pop	{r7}
 8000842:	4770      	bx	lr

08000844 <DRV_GPIO_IRQEnable>:
 *
 * @return		-	none
 *
 * @Note		-	none
 **********************************************/
void DRV_GPIO_IRQEnable(uint8_t IRQNumber, uint8_t En_Di){
 8000844:	b480      	push	{r7}
 8000846:	b083      	sub	sp, #12
 8000848:	af00      	add	r7, sp, #0
 800084a:	4603      	mov	r3, r0
 800084c:	460a      	mov	r2, r1
 800084e:	71fb      	strb	r3, [r7, #7]
 8000850:	4613      	mov	r3, r2
 8000852:	71bb      	strb	r3, [r7, #6]
	// Enable the IRQ
	if(En_Di == ENABLE){
 8000854:	79bb      	ldrb	r3, [r7, #6]
 8000856:	2b01      	cmp	r3, #1
 8000858:	d11c      	bne.n	8000894 <DRV_GPIO_IRQEnable+0x50>
		// touch the ISERx registers
		if(IRQNumber <= 31)		*HAL_NVIC_ISER0 |= (1 << IRQNumber);			// IRQ  0 to 31: ISER0
 800085a:	79fb      	ldrb	r3, [r7, #7]
 800085c:	2b1f      	cmp	r3, #31
 800085e:	d80a      	bhi.n	8000876 <DRV_GPIO_IRQEnable+0x32>
 8000860:	4b1d      	ldr	r3, [pc, #116]	; (80008d8 <DRV_GPIO_IRQEnable+0x94>)
 8000862:	681b      	ldr	r3, [r3, #0]
 8000864:	79fa      	ldrb	r2, [r7, #7]
 8000866:	2101      	movs	r1, #1
 8000868:	fa01 f202 	lsl.w	r2, r1, r2
 800086c:	4611      	mov	r1, r2
 800086e:	4a1a      	ldr	r2, [pc, #104]	; (80008d8 <DRV_GPIO_IRQEnable+0x94>)
 8000870:	430b      	orrs	r3, r1
 8000872:	6013      	str	r3, [r2, #0]
	}else{
		// touch the ICERx registers
		if(IRQNumber <= 31)		*HAL_NVIC_ICER0 |= (1 << IRQNumber);			// IRQ  0 to 31: ICER0
		else if(IRQNumber <= 63)	*HAL_NVIC_ICER1 |= (1 << (IRQNumber - 32));	// IRQ 32 to 63: ICER1
	}
}
 8000874:	e02a      	b.n	80008cc <DRV_GPIO_IRQEnable+0x88>
		else if(IRQNumber <= 63)	*HAL_NVIC_ISER1 |= (1 << (IRQNumber - 32));	// IRQ 32 to 63: ISER1
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	2b3f      	cmp	r3, #63	; 0x3f
 800087a:	d827      	bhi.n	80008cc <DRV_GPIO_IRQEnable+0x88>
 800087c:	4b17      	ldr	r3, [pc, #92]	; (80008dc <DRV_GPIO_IRQEnable+0x98>)
 800087e:	681b      	ldr	r3, [r3, #0]
 8000880:	79fa      	ldrb	r2, [r7, #7]
 8000882:	3a20      	subs	r2, #32
 8000884:	2101      	movs	r1, #1
 8000886:	fa01 f202 	lsl.w	r2, r1, r2
 800088a:	4611      	mov	r1, r2
 800088c:	4a13      	ldr	r2, [pc, #76]	; (80008dc <DRV_GPIO_IRQEnable+0x98>)
 800088e:	430b      	orrs	r3, r1
 8000890:	6013      	str	r3, [r2, #0]
}
 8000892:	e01b      	b.n	80008cc <DRV_GPIO_IRQEnable+0x88>
		if(IRQNumber <= 31)		*HAL_NVIC_ICER0 |= (1 << IRQNumber);			// IRQ  0 to 31: ICER0
 8000894:	79fb      	ldrb	r3, [r7, #7]
 8000896:	2b1f      	cmp	r3, #31
 8000898:	d80a      	bhi.n	80008b0 <DRV_GPIO_IRQEnable+0x6c>
 800089a:	4b11      	ldr	r3, [pc, #68]	; (80008e0 <DRV_GPIO_IRQEnable+0x9c>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	79fa      	ldrb	r2, [r7, #7]
 80008a0:	2101      	movs	r1, #1
 80008a2:	fa01 f202 	lsl.w	r2, r1, r2
 80008a6:	4611      	mov	r1, r2
 80008a8:	4a0d      	ldr	r2, [pc, #52]	; (80008e0 <DRV_GPIO_IRQEnable+0x9c>)
 80008aa:	430b      	orrs	r3, r1
 80008ac:	6013      	str	r3, [r2, #0]
}
 80008ae:	e00d      	b.n	80008cc <DRV_GPIO_IRQEnable+0x88>
		else if(IRQNumber <= 63)	*HAL_NVIC_ICER1 |= (1 << (IRQNumber - 32));	// IRQ 32 to 63: ICER1
 80008b0:	79fb      	ldrb	r3, [r7, #7]
 80008b2:	2b3f      	cmp	r3, #63	; 0x3f
 80008b4:	d80a      	bhi.n	80008cc <DRV_GPIO_IRQEnable+0x88>
 80008b6:	4b0b      	ldr	r3, [pc, #44]	; (80008e4 <DRV_GPIO_IRQEnable+0xa0>)
 80008b8:	681b      	ldr	r3, [r3, #0]
 80008ba:	79fa      	ldrb	r2, [r7, #7]
 80008bc:	3a20      	subs	r2, #32
 80008be:	2101      	movs	r1, #1
 80008c0:	fa01 f202 	lsl.w	r2, r1, r2
 80008c4:	4611      	mov	r1, r2
 80008c6:	4a07      	ldr	r2, [pc, #28]	; (80008e4 <DRV_GPIO_IRQEnable+0xa0>)
 80008c8:	430b      	orrs	r3, r1
 80008ca:	6013      	str	r3, [r2, #0]
}
 80008cc:	bf00      	nop
 80008ce:	370c      	adds	r7, #12
 80008d0:	46bd      	mov	sp, r7
 80008d2:	bc80      	pop	{r7}
 80008d4:	4770      	bx	lr
 80008d6:	bf00      	nop
 80008d8:	e000e100 	.word	0xe000e100
 80008dc:	e000e104 	.word	0xe000e104
 80008e0:	e000e180 	.word	0xe000e180
 80008e4:	e000e184 	.word	0xe000e184

080008e8 <DRV_GPIO_IRQPriority>:
 *
 * @return		-	none
 *
 * @Note		-	none
 **********************************************/
void DRV_GPIO_IRQPriority(uint8_t IRQNumber, uint8_t priority){
 80008e8:	b480      	push	{r7}
 80008ea:	b085      	sub	sp, #20
 80008ec:	af00      	add	r7, sp, #0
 80008ee:	4603      	mov	r3, r0
 80008f0:	460a      	mov	r2, r1
 80008f2:	71fb      	strb	r3, [r7, #7]
 80008f4:	4613      	mov	r3, r2
 80008f6:	71bb      	strb	r3, [r7, #6]
	uint8_t reg_offset = IRQNumber / 4;
 80008f8:	79fb      	ldrb	r3, [r7, #7]
 80008fa:	089b      	lsrs	r3, r3, #2
 80008fc:	73fb      	strb	r3, [r7, #15]
	uint8_t shift = (IRQNumber % 4) * 8 + (8 - HAL_NVIC_PR_NABITS);
 80008fe:	79fb      	ldrb	r3, [r7, #7]
 8000900:	f003 0303 	and.w	r3, r3, #3
 8000904:	b2db      	uxtb	r3, r3
 8000906:	00db      	lsls	r3, r3, #3
 8000908:	b2db      	uxtb	r3, r3
 800090a:	3304      	adds	r3, #4
 800090c:	73bb      	strb	r3, [r7, #14]
	*(HAL_NVIC_IPR0 + reg_offset) |= priority << shift;
 800090e:	7bfb      	ldrb	r3, [r7, #15]
 8000910:	009b      	lsls	r3, r3, #2
 8000912:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000916:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800091a:	681a      	ldr	r2, [r3, #0]
 800091c:	79b9      	ldrb	r1, [r7, #6]
 800091e:	7bbb      	ldrb	r3, [r7, #14]
 8000920:	fa01 f303 	lsl.w	r3, r1, r3
 8000924:	4619      	mov	r1, r3
 8000926:	7bfb      	ldrb	r3, [r7, #15]
 8000928:	009b      	lsls	r3, r3, #2
 800092a:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 800092e:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000932:	430a      	orrs	r2, r1
 8000934:	601a      	str	r2, [r3, #0]
}
 8000936:	bf00      	nop
 8000938:	3714      	adds	r7, #20
 800093a:	46bd      	mov	sp, r7
 800093c:	bc80      	pop	{r7}
 800093e:	4770      	bx	lr

08000940 <DRV_GPIO_IRQHandle>:
 *
 * @return		-	none
 *
 * @Note		-	none
 **********************************************/
void DRV_GPIO_IRQHandle(uint8_t PinNumber){
 8000940:	b480      	push	{r7}
 8000942:	b083      	sub	sp, #12
 8000944:	af00      	add	r7, sp, #0
 8000946:	4603      	mov	r3, r0
 8000948:	71fb      	strb	r3, [r7, #7]
	// clear the EXTI PR
	if(HAL_EXTI->PR & (1 << PinNumber)){
 800094a:	4b0c      	ldr	r3, [pc, #48]	; (800097c <DRV_GPIO_IRQHandle+0x3c>)
 800094c:	695b      	ldr	r3, [r3, #20]
 800094e:	79fa      	ldrb	r2, [r7, #7]
 8000950:	2101      	movs	r1, #1
 8000952:	fa01 f202 	lsl.w	r2, r1, r2
 8000956:	4013      	ands	r3, r2
 8000958:	2b00      	cmp	r3, #0
 800095a:	d009      	beq.n	8000970 <DRV_GPIO_IRQHandle+0x30>
		HAL_EXTI->PR |= (1 << PinNumber);
 800095c:	4b07      	ldr	r3, [pc, #28]	; (800097c <DRV_GPIO_IRQHandle+0x3c>)
 800095e:	695b      	ldr	r3, [r3, #20]
 8000960:	79fa      	ldrb	r2, [r7, #7]
 8000962:	2101      	movs	r1, #1
 8000964:	fa01 f202 	lsl.w	r2, r1, r2
 8000968:	4611      	mov	r1, r2
 800096a:	4a04      	ldr	r2, [pc, #16]	; (800097c <DRV_GPIO_IRQHandle+0x3c>)
 800096c:	430b      	orrs	r3, r1
 800096e:	6153      	str	r3, [r2, #20]
	}
}
 8000970:	bf00      	nop
 8000972:	370c      	adds	r7, #12
 8000974:	46bd      	mov	sp, r7
 8000976:	bc80      	pop	{r7}
 8000978:	4770      	bx	lr
 800097a:	bf00      	nop
 800097c:	40013c00 	.word	0x40013c00

08000980 <__libc_init_array>:
 8000980:	b570      	push	{r4, r5, r6, lr}
 8000982:	4d0d      	ldr	r5, [pc, #52]	; (80009b8 <__libc_init_array+0x38>)
 8000984:	4c0d      	ldr	r4, [pc, #52]	; (80009bc <__libc_init_array+0x3c>)
 8000986:	1b64      	subs	r4, r4, r5
 8000988:	10a4      	asrs	r4, r4, #2
 800098a:	2600      	movs	r6, #0
 800098c:	42a6      	cmp	r6, r4
 800098e:	d109      	bne.n	80009a4 <__libc_init_array+0x24>
 8000990:	4d0b      	ldr	r5, [pc, #44]	; (80009c0 <__libc_init_array+0x40>)
 8000992:	4c0c      	ldr	r4, [pc, #48]	; (80009c4 <__libc_init_array+0x44>)
 8000994:	f000 f818 	bl	80009c8 <_init>
 8000998:	1b64      	subs	r4, r4, r5
 800099a:	10a4      	asrs	r4, r4, #2
 800099c:	2600      	movs	r6, #0
 800099e:	42a6      	cmp	r6, r4
 80009a0:	d105      	bne.n	80009ae <__libc_init_array+0x2e>
 80009a2:	bd70      	pop	{r4, r5, r6, pc}
 80009a4:	f855 3b04 	ldr.w	r3, [r5], #4
 80009a8:	4798      	blx	r3
 80009aa:	3601      	adds	r6, #1
 80009ac:	e7ee      	b.n	800098c <__libc_init_array+0xc>
 80009ae:	f855 3b04 	ldr.w	r3, [r5], #4
 80009b2:	4798      	blx	r3
 80009b4:	3601      	adds	r6, #1
 80009b6:	e7f2      	b.n	800099e <__libc_init_array+0x1e>
 80009b8:	080009e0 	.word	0x080009e0
 80009bc:	080009e0 	.word	0x080009e0
 80009c0:	080009e0 	.word	0x080009e0
 80009c4:	080009e4 	.word	0x080009e4

080009c8 <_init>:
 80009c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009ca:	bf00      	nop
 80009cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009ce:	bc08      	pop	{r3}
 80009d0:	469e      	mov	lr, r3
 80009d2:	4770      	bx	lr

080009d4 <_fini>:
 80009d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009d6:	bf00      	nop
 80009d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009da:	bc08      	pop	{r3}
 80009dc:	469e      	mov	lr, r3
 80009de:	4770      	bx	lr
